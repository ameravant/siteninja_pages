- content_for :meta_title do
  = @page.meta_title
- content_for :meta_description do
  = @page.meta_description
- content_for :meta_keywords do
  = @page.meta_keywords
= render :partial => "shared/slice", :locals => {:column_section_id => nil, :controller => "pages", :action => "index"}, :collection => @main_column_sections
- if @page.permalink == "home" and !@settings.homepage_banner.blank? and !params[:page]
  - content_for :banner do
    = @settings.homepage_banner
- content_for :head do
  = @page.head_script unless @page.head_script.blank?
  - unless @page.additional_styles.blank?
    %style{:type => "text/css"}
      = @page.additional_styles


- content_for :head do
  <meta property="og:locale" content="en_US" />
  <meta property="og:type" content="article" />
  ==<meta property="og:title" content="#{@page.title}" />
  ==<meta property="og:description" content="#{@page.meta_description}" />
  ==<meta property="og:url" content="#{request.url}" />
  ==<meta property="og:site_name" content="#{@cms_config['website']['name']}" />
  <meta property="article:section" content="General" />
  ==<meta property="og:updated_time" content="#{@page.updated_at.strftime("%Y-%m-%d")}T#{@page.updated_at.strftime("%H:%M:00+08:00")}" />
  - if !Image.first(:conditions => {:show_as_cover_image => true, :viewable_type => "Page", :viewable_id => @page.id}).blank?
    - image = Image.first(:conditions => {:show_as_cover_image => true, :viewable_type => "Page", :viewable_id => @page.id})
    ==<meta property="og:image" content="#{image.image.url}" />
    ==<meta property="og:image:secure_url" content="#{image.image.url}" />
    ==<meta property="og:image:alt" content="#{image.title}" />
    ==<meta property="og:image:type" content="image/jpeg" />
  ==<meta property="article:published_time" content="#{@page.created_at.strftime("%Y-%m-%d")}T#{@page.created_at.strftime("%H:%M:00+08:00")}" />
  ==<meta property="article:modified_time" content="#{@page.updated_at.strftime("%Y-%m-%d")}T#{@page.updated_at.strftime("%H:%M:00+08:00")}" />




